var l=Object.defineProperty;var n=(t,s,e)=>s in t?l(t,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[s]=e;var r=(t,s,e)=>(n(t,typeof s!="symbol"?s+"":s,e),e);(function(){"use strict";class t extends AudioWorkletProcessor{constructor(a){super();r(this,"state");r(this,"alive");r(this,"exports");r(this,"heapFloat32");r(this,"bypass");this.exports||(this.exports=new WebAssembly.Instance(a.processorOptions.module).exports,this.heapFloat32=new Float32Array(this.exports.memory.buffer)),this.state=this.exports.newState(),this.alive=!1,this.port.onmessage=({data:i})=>{this.alive&&(i?this.port.postMessage({vadProb:this.exports.getVadProb(this.state)}):(this.alive=!1,this.exports.deleteState(this.state)))}}static get parameterDescriptors(){return[{name:"bypass",defaultValue:0,minValue:0,maxValue:1}]}process(a,i,h){this.bypass=h.bypass[0]!==0;const o=i[0][0];if(this.bypass)return o.set(a[0][0]),!0;this.heapFloat32.set(a[0][0],this.exports.getInput(this.state)/Float32Array.BYTES_PER_ELEMENT);const p=this.exports.pipe(this.state,o.length)/Float32Array.BYTES_PER_ELEMENT;return p&&o.set(this.heapFloat32.subarray(p,p+o.length)),!0}}registerProcessor("noise-suppressor",t)})();
